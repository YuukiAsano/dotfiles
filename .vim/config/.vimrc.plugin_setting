"------------------------------------
" powerline
"------------------------------------
"{{{
">の形をを許可する
"ちゃんと/.vim/fontsのfontを入れていないと動かないよ
"set guifont=Ricty_for_Powerline:h10
"
"set guifontwide=Ricty:h10
"let g:Powerline_symbols = 'fancy'
"
"let g:Powerline_symbols = 'compatible'
"}}}


"----------------------------------------------------
" Tlist
"----------------------------------------------------
" 右に表示
let g:Tlist_Use_Left_Window = 0

"----------------------------------------------------
" NERDTree 
"----------------------------------------------------
" loaded_nerd_tree      1にするとNERDTreeスクリプトを読み込まない。
" NERDTreeChDirMode     vimのカレントディレクトリを変更するタイミングを設定する
" NERDTreeMouseMode     マウス制御のモード
" NERDTreeShowFiles     ファイルを表示するか
" NERDTreeSortOrder     ソート順
" NERDTreeSplitVertical NERDTreeウィンドウを垂直分割で作成するか

" NERDTreeウィンドウを横に表示するか上に表示するか
let g:NERDTreeWinPos = "left"

" NERDTreeWinSize       NERDTreeウィンドウのサイズ
"
" カラー表示する
let NERDChristmasTree=1

" カーソル行を強調するか
let NERDTreeHighlightCursorline=1

" NERDTreeIgnore	無視するファイルを設定する
" .svn .git .DS_Store ~ は無視
let NERDTreeIgnore=['\.svn$', '\.git$', '\.DS_Store', '\~$']

" 隠しファイルを表示するか
let NERDTreeShowHidden=1

" .NERDTreeBookmarksファイルをどこに置くか
let NERDTreeBookmarksFile=$HOME.'/.vim/data/NERDTree/.NERDTreeBookmarks'

" Ctrl + n でNERDTreeを開く/閉じる
" nnoremap <f12> :NERDTreeToggle<CR>
" nnoremap <silent> <C-n> :NERDTreeToggle<CR>
nnoremap <silent> <C-n> :TrinityToggleNERDTree<CR>

" This options disables the 'Bookmarks' label 'Press ? for help' text.
let NERDTreeMinimalUI=1



"----------------------------------------------------
" QuickRun 
"----------------------------------------------------
"{{{
	" <Leader>r で、php,js,cなどのコンパイル、テスト出来る
	let g:quickrun_config = {}
	" default のキーマップを使用しない
	let g:quickrun_no_default_key_mappings = 1
	let g:quickrun_config = {}
	nmap <Leader>r <Plug>(quickrun)

	let g:quickrun_config['coffee'] = {
		\ 'command' : 'coffee',
		\ 'exec' : ['%c -cbp %s']
	\}

	" gem install bluecloth
	let g:quickrun_config['markdown'] = {
		\ 'command': 'bluecloth',
		\ 'outputter': 'browser',
		\ 'exec': '%c -f %s'
	\ }

	let g:quickrun_config['ruby'] = {
		\ 'command': 'ruby',
	\ }

	"javascriptの実行をnode.jsで
	let $JS_CMD='node'
"}}}


"----------------------------------------------------
" Unite
"----------------------------------------------------
" 最近使ったファイルの一覧
noremap <C-U><C-R> :Unite file_mru<CR>

" レジスタ一覧
noremap <C-U><C-Y> :Unite -buffer-name=register register<CR>

" ESCキーを2回押すと終了する
au FileType unite nnoremap <silent> <buffer> <ESC><ESC> :q<CR>
au FileType unite inoremap <silent> <buffer> <ESC><ESC> <ESC>:q<CR>


"----------------------------------------------------
" BlueCloth markdownがquickrunで表示出来るように
"----------------------------------------------------

" utf-8で表示するよう
let markdownHead = "<!DOCTYPE HTML> <html lang=\"ja\"> <head> <meta charset=\"UTF-8\"> </head><body>"
let markdownFoot = "</body> </html>"
let g:quickrun_config['markdown'] = {
	\ 'command'   : 'bluecloth',
	\ 'exec'      : ["echo \'" . markdownHead. "'", '%c  %s', "echo \'" . markdownFoot. "'"],
	\ 'outputter' : 'browser',
\ }


"------------------------------------
" memolist.vim
"------------------------------------
""{{{
let g:memolist_path = "~/.vim/memolist"
let g:memolist_memo_suffix = "mkd"
let g:memolist_memo_date = "%Y-%m-%d %H:%M"
let g:memolist_memo_date = "epoch"
let g:memolist_memo_date = "%D %T"
let g:memolist_prompt_tags = 1
let g:memolist_prompt_categories = 1
let g:memolist_qfixgrep = 0
let g:memolist_vimfiler = 1
let g:memolist_template_dir_path = "~/.vim/memolist"

" mapping
map <Space>mn  :MemoNew<CR>
map <Space>ml  :MemoList<CR>
map <Space>mg  :MemoGrep<CR>
"}}}
